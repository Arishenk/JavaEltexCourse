/*
 * This file is generated by jOOQ.
 */
package com.arishenk.jook.Database.tables;


import com.arishenk.jook.Database.DefaultSchema;
import com.arishenk.jook.Database.tables.records.UsersalesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Usersales extends TableImpl<UsersalesRecord> {

    private static final long serialVersionUID = -963160413;

    /**
     * The reference instance of <code>USERSALES</code>
     */
    public static final Usersales USERSALES = new Usersales();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsersalesRecord> getRecordType() {
        return UsersalesRecord.class;
    }

    /**
     * The column <code>USERSALES.id</code>.
     */
    public final TableField<UsersalesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>USERSALES.id_user</code>.
     */
    public final TableField<UsersalesRecord, Integer> ID_USER = createField("id_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USERSALES.id_sale</code>.
     */
    public final TableField<UsersalesRecord, Integer> ID_SALE = createField("id_sale", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>USERSALES</code> table reference
     */
    public Usersales() {
        this(DSL.name("USERSALES"), null);
    }

    /**
     * Create an aliased <code>USERSALES</code> table reference
     */
    public Usersales(String alias) {
        this(DSL.name(alias), USERSALES);
    }

    /**
     * Create an aliased <code>USERSALES</code> table reference
     */
    public Usersales(Name alias) {
        this(alias, USERSALES);
    }

    private Usersales(Name alias, Table<UsersalesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Usersales(Name alias, Table<UsersalesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UsersalesRecord, Integer> getIdentity() {
        return Internal.createIdentity(com.arishenk.jook.Database.tables.Usersales.USERSALES, com.arishenk.jook.Database.tables.Usersales.USERSALES.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UsersalesRecord> getPrimaryKey() {
        return Internal.createUniqueKey(com.arishenk.jook.Database.tables.Usersales.USERSALES, "KEY_USERSALES_PRIMARY", com.arishenk.jook.Database.tables.Usersales.USERSALES.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UsersalesRecord>> getKeys() {
        return Arrays.<UniqueKey<UsersalesRecord>>asList(
              Internal.createUniqueKey(com.arishenk.jook.Database.tables.Usersales.USERSALES, "KEY_USERSALES_PRIMARY", com.arishenk.jook.Database.tables.Usersales.USERSALES.ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Usersales as(String alias) {
        return new Usersales(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Usersales as(Name alias) {
        return new Usersales(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Usersales rename(String name) {
        return new Usersales(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Usersales rename(Name name) {
        return new Usersales(name, null);
    }
}
